<?php

/**
 * @file
 * The block module that displays all the products on the store page
 */

/**
 * Implements hook_help().
 */
function mymodule_help($path, $arg) {
  switch ($path) {
    case 'admin/help#mymodule':
    	return '<p>' . t('Displays on the page that has all the products in the store') . '</p>';
  		break;
  }
}

/**
 * Implements hook_menu().
 */
function mymodule_menu() {
	$items = array();
  $items['all_products'] = array(
  	'title'            => 'All products',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('mymodule_table_pager'),
    'access arguments' => array('access content'),
  );
  $items['admin/config/development/mymodule'] = array(
  	'title'            => 'Settings mymodule',
  	'page callback'    => 'drupal_get_form',
  	'page arguments'   => array('mymodule_form_settings'),
  	'description'      => 'Configure and sorting of items on a page.',
  	'access arguments' => array('admin'),
  );
  return $items;
}


/**
 * Page callback for form settings.
 */
function mymodule_form_settings() {
	$form = array();
	$form['quantity'] = array(
		'#type'	         => 'textfield',
		'#size'          => 25,
		'#title' 				 => t('Quantity of elements per page'),
		'#default_value' => variable_get('quantity', FALSE),
	);

	$form['checkbox_redirect'] = array(
		'#type'  => 'checkbox',
		'#title' => t('After saving the settings, go to the page All products'),
    '#states' => array(
      'invisible' => array(
        ':input[name="quantity"]' => array('empty' => TRUE),
      ),
    ),
	);
	return system_settings_form($form);
}

/**
 * Check the field name to the correct input
 */
function mymodule_form_settings_validate($form, &$form_state) {
	if(!is_numeric($form_state['values']['quantity'])) {
		form_set_error('quantity', t('You can only input numbers'));
	}
 	if(!empty($form_state['values']['checkbox_redirect'])) {
 		$form_state['redirect'] = array('all_products');
  }
}

/**
 * Function for created table from the ability to sort and creating pager.
 */
function mymodule_table_pager() {
  $header = array(
    'title'   => array('data' => t('Name'), 'field'    => 'cp.title'),
    'image'   => array('data' => t('Image'), 'field'   => 'ip.field_image_product_fid'),
    'review'  => array('data' => t('Review'), 'field'  => 'cp.title'),
    'created' => array('data' => t('Created'), 'field' => 'cp.created'),
    'price'   => array('data' => t('Price'), 'field'   => 'price.commerce_price_amount'),
  );
	$query = db_select('commerce_product', 'cp');
	$query->join('field_data_field_product', 'fp', 'cp.product_id = fp.field_product_product_id');
	$query->join('field_data_field_image_product', 'ip', 'cp.product_id = ip.entity_id');
	$query->join('field_data_commerce_price', 'price', 'ip.entity_id = price.entity_id');
  $query = $query->extend('PagerDefault')->extend('TableSort');
  $query->fields('cp', array('product_id', 'title', 'created'));
	$query->fields('fp', array('entity_id'));
	$query->fields('ip', array('field_image_product_fid'));
	$query->fields('price', array('commerce_price_amount'));
	$query->limit(variable_get('quantity', FALSE));
  $query->orderByHeader($header);
  $result = $query->execute()->fetchAll();
  $options = array();
  foreach ($result as $row) {
  	$file = file_load($row->field_image_product_fid);
		$arguments = array(
			'path'       => $file->uri,
			'style_name' => '295x220xs',
			'attributes' => array(
        'class'    => array(
          'img-all-products',
        ),
      ),
		);
		$date = date('H:i d/m/Y' , $row->created);
		$link = 'node/' . $row->entity_id;
		$img = theme('image_style', $arguments);
		$link_img = l($img, $link, array('html' => TRUE));
		$title = $row->title;
		$price = commerce_currency_amount_to_decimal($row->commerce_price_amount, 'USD');
		$options[$row->product_id] = array(
      'title'   => $title,
      'image'   => $link_img,
      'created' => $date,
      'review'  => t('Product: !link', array('!link' =>  l($title, $link))),
      'price'   => $price,
    );
	}
  $form['product'] = array(
    '#type'       => 'tableselect',
    '#header'     => $header,
    '#options'    => $options,
    '#attributes' => array(
    	'class'     => array(
    		'table-all-products',
    	),
    ),
    '#empty' => t('No available products.'),
  );
  $form['pager'] = array('#markup' => theme('pager'));
  return $form;
}
